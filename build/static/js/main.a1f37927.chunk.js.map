{"version":3,"sources":["components/CoworkerCard.tsx","types/index.ts","components/PeopleRandomizer.tsx","enums/people.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CoworkerCard","coworker","isActive","isInactive","onRemove","className","onClick","emoji","firstname","lastname","job","age","defaultProps","Job","PeopleRandomizer","coworkers","useState","curSelected","setCurSelected","pickedCoworkers","setPickedCoworkers","namesPicked","map","c","pickedName","removeUser","name","includes","toPickCoworkers","filter","length","Audio","process","play","newPicked","Math","floor","random","alert","people","App","p","undefined","Object","keys","style","backgroundImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1f37927.chunk.js","sourcesContent":["import { Coworker } from '../types'\n\nconst CoworkerCard = ({\n    coworker,\n    isActive,\n    isInactive,\n    onRemove}: {\n        coworker: Coworker,\n        isActive: boolean,\n        isInactive: boolean,\n        onRemove: (coworker: Coworker) => void\n    }) => (\n    <div className={`coworker ${isActive ? 'active' : ''} ${isInactive ? 'inactive' : ''}`}>\n        <span className=\"coworker__remove\" onClick={() => onRemove(coworker)}>Enlever</span>\n        <div className=\"coworker__emoji\">{coworker.emoji}</div>\n        <p className=\"coworker__name\">{coworker.firstname} {coworker.lastname}</p>\n        <p className=\"coworker__info\">{coworker.job} - {`${coworker.age >= 30 ? '👴 <- vieux' : `${coworker.age} ans` }`}</p>\n    </div>\n)\n\nCoworkerCard.defaultProps = {\n    isActive: false,\n    isInactive: false\n}\n\nexport default CoworkerCard","export enum Job {\n    dev = 'dev',\n    cto = 'cto',\n    data = 'data',\n    infra = 'infra',\n    design = 'design'\n}\n\nexport interface Coworker {\n    emoji: string,\n    firstname: string,\n    lastname: string\n    age: number\n    job: Job | undefined\n}","import React, { useState } from 'react'\nimport { Coworker } from '../types'\nimport CoworkerCard from './CoworkerCard'\n\nconst PeopleRandomizer = ({ coworkers } : { coworkers: Array<Coworker> }) => {\n    const [curSelected, setCurSelected] = useState<Coworker | null>(null)\n    const [pickedCoworkers, setPickedCoworkers] = useState<Array<Coworker>>([])\n    const namesPicked: string[] = pickedCoworkers.map((c: Coworker) => `${c.firstname} ${c.lastname}`)\n\n    const pickRandom = (): void => {\n        const toPickCoworkers = coworkers.filter((c: Coworker) => \n            !namesPicked.includes(`${c.firstname} ${c.lastname}`)\n        )\n\n        if (!toPickCoworkers?.length) {\n            alert('Tout le monde a été pris !')\n            return\n        }\n\n        // Very important line, do not remove, might brake legacy.\n        new Audio(`${process.env.PUBLIC_URL}/lezgo.mp3`).play()\n        const pickedIndex = Math.floor(Math.random() * toPickCoworkers.length - 1) + 1\n        const newPicked = toPickCoworkers[pickedIndex]\n        setCurSelected(newPicked)\n        removeUser(newPicked)\n    }\n\n    let pickedName: string = ''\n    if (curSelected) {\n        pickedName = `${curSelected.firstname} ${curSelected.lastname}`\n    }\n\n    const removeUser = (coworker: Coworker) => {\n        setPickedCoworkers([\n            ...pickedCoworkers,\n            coworker\n        ])\n    }\n\n    return (\n        <div className=\"randomizer\">\n            <div className=\"subtitle\">\n                <h2 className=\"h2\">La roue de la fortune</h2>\n            </div>\n            <div className=\"randomizer__wrapper\">\n                <div className=\"coworkers\">\n                    {coworkers.map((c: Coworker) => {\n                        const name: string = `${c.firstname} ${c.lastname}`\n                        const isActive: boolean = pickedName === name\n                        const isInactive: boolean = namesPicked.includes(`${c.firstname} ${c.lastname}`)\n                        \n                        return (\n                            <CoworkerCard \n                                isActive={isActive} \n                                isInactive={isInactive} \n                                coworker={c} \n                                key={name}\n                                onRemove={removeUser}\n                            />\n                        )\n                    })}\n                </div>\n\n                <div>\n                    <button onClick={pickRandom}>\n                        On fait tourner la roue lezgoooo !\n                    </button>\n                    <p>J'ai pas eu le temps de faire une roue de la fortune tmtc</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PeopleRandomizer","export const people = [\n    {\n        \"emoji\": \"📈\",\n        \"firstname\": \"Thibaut\",\n        \"lastname\": \"Testeur de bureau\",\n        \"age\": 34,\n        \"job\": \"cto\"\n    },\n    {\n        \"emoji\": \"🤙\",\n        \"firstname\": \"Mat\",\n        \"lastname\": \"Thieu\",\n        \"age\": 25,\n        \"job\": \"dev\"\n    },\n    {\n        \"emoji\": \"📷\",\n        \"firstname\": \"Au\",\n        \"lastname\": \"Drey\",\n        \"age\": 30,\n        \"job\": \"dev\"\n    },\n    {\n        \"emoji\": \"🍕\",\n        \"firstname\": \"Massimo\",\n        \"lastname\": \"data-lien\",\n        \"age\": 24,\n        \"job\": \"data\"\n    },\n    {\n        \"emoji\": \"🐈\",\n        \"firstname\": \"Émilien\",\n        \"lastname\": \"Les Chats\",\n        \"age\": 33,\n        \"job\": \"data\"\n    },\n    {\n        \"emoji\": \"🚴‍♂️\",\n        \"firstname\": \"Zii\",\n        \"lastname\": \"Trus\",\n        \"age\": 27,\n        \"job\": \"infra\"\n    },\n    {\n        \"emoji\": \"🛴\",\n        \"firstname\": \"Ant\",\n        \"lastname\": \"Oine\",\n        \"age\": 24,\n        \"job\": \"design\"\n    }\n]\n","import React from 'react';\nimport './App.css';\nimport PeopleRandomizer from './components/PeopleRandomizer';\nimport { people } from './enums/people';\nimport { Coworker, Job } from './types/index';\n\ninterface RawCoworker {\n  emoji: string,\n  firstname: string,\n  lastname: string,\n  age: number,\n  job: string\n}\n\nconst App = () => {\n  const coworkers: Coworker[] = people.map((p: RawCoworker) => {\n    let job: Job | undefined = undefined\n    if(Object.keys(Job).includes(p.job)){\n        job = Job[p.job as keyof typeof Job]\n    }\n    \n    return {\n        ...p,\n        job\n    }\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Tu seras la poubelle pour aller danser\n        </h1>\n      </header>\n      <div className=\"content\" style={{\n        backgroundImage: `url(${process.env.PUBLIC_URL}/philippe.jpg)`\n      }}>\n        <PeopleRandomizer coworkers={coworkers} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}